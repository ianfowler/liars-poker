services:
  reverse-proxy:
    image: traefik:v3.2
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --api=true
      - --api.dashboard=true
      - --accesslog=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
    labels:
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.middlewares.auth.basicauth.users=admin:$2y$12$BE.SMu4OHSgeHz3VLggwyuitNRzRTSWD2DeYU5JgrDATG.D1qogB6
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
    restart: always

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      FLASK_ENV: ${FLASK_ENV} 
      API_PORT: ${API_PORT}
    working_dir: /api
    volumes:
      - ./api:/api
    labels:
      - traefik.http.routers.api.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.services.api.loadbalancer.server.port=${API_PORT}
    networks:
      - proxy 
    restart: always

  frontend:
    image: nginx:stable
    volumes:
      - ./frontend/build:/usr/share/nginx/html:ro
    labels:
      - traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.tls.certresolver=letsencrypt
    networks:
      - proxy
    restart: unless-stopped

networks:
  proxy:
    driver: bridge


